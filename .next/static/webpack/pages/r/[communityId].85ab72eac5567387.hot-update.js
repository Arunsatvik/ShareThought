"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/r/[communityId]",{

/***/ "./src/hooks/usePosts.tsx":
/*!********************************!*\
  !*** ./src/hooks/usePosts.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/storage */ \"./node_modules/firebase/storage/dist/esm/index.esm.js\");\n/* harmony import */ var react_firebase_hooks_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-firebase-hooks/auth */ \"./node_modules/react-firebase-hooks/auth/dist/index.esm.js\");\n/* harmony import */ var recoil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! recoil */ \"./node_modules/recoil/es/index.js\");\n/* harmony import */ var _atoms_authModalAtom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../atoms/authModalAtom */ \"./src/atoms/authModalAtom.ts\");\n/* harmony import */ var _atoms_communitiesAtom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../atoms/communitiesAtom */ \"./src/atoms/communitiesAtom.ts\");\n/* harmony import */ var _atoms_postsAtom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../atoms/postsAtom */ \"./src/atoms/postsAtom.ts\");\n/* harmony import */ var _firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../firebase/clientApp */ \"./src/firebase/clientApp.ts\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_9__);\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\nconst usePosts = (communityData)=>{\n    _s();\n    const [user, loadingUser] = (0,react_firebase_hooks_auth__WEBPACK_IMPORTED_MODULE_3__.useAuthState)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.auth);\n    const [postStateValue, setPostStateValue] = (0,recoil__WEBPACK_IMPORTED_MODULE_4__.useRecoilState)(_atoms_postsAtom__WEBPACK_IMPORTED_MODULE_7__.postState);\n    const setAuthModalState = (0,recoil__WEBPACK_IMPORTED_MODULE_4__.useSetRecoilState)(_atoms_authModalAtom__WEBPACK_IMPORTED_MODULE_5__.authModalState);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_9__.useRouter)();\n    const communityStateValue = (0,recoil__WEBPACK_IMPORTED_MODULE_4__.useRecoilValue)(_atoms_communitiesAtom__WEBPACK_IMPORTED_MODULE_6__.communityState);\n    const onSelectPost = (post, postIdx)=>{\n        console.log(\"HERE IS STUFF\", post, postIdx);\n        setPostStateValue((prev)=>({\n                ...prev,\n                selectedPost: {\n                    ...post,\n                    postIdx\n                }\n            }));\n        router.push(\"/r/\".concat(post.communityId, \"/comments/\").concat(post.id));\n    };\n    const onVote = async (event, post, vote, communityId)=>{\n        var _user;\n        event.stopPropagation();\n        if (!((_user = user) === null || _user === void 0 ? void 0 : _user.uid)) {\n            setAuthModalState({\n                open: true,\n                view: \"login\"\n            });\n            return;\n        }\n        const { voteStatus } = post;\n        // const existingVote = post.currentUserVoteStatus;\n        const existingVote = postStateValue.postVotes.find((vote)=>vote.postId === post.id);\n        // is this an upvote or a downvote?\n        // has this user voted on this post already? was it up or down?\n        try {\n            let voteChange = vote;\n            const batch = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.writeBatch)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.firestore);\n            const updatedPost = {\n                ...post\n            };\n            const updatedPosts = [\n                ...postStateValue.posts\n            ];\n            let updatedPostVotes = [\n                ...postStateValue.postVotes\n            ];\n            // New vote\n            if (!existingVote) {\n                const postVoteRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.firestore, \"users\", \"\".concat(user.uid, \"/postVotes\")));\n                const newVote = {\n                    id: postVoteRef.id,\n                    postId: post.id,\n                    communityId,\n                    voteValue: vote\n                };\n                console.log(\"NEW VOTE!!!\", newVote);\n                // APRIL 25 - DON'T THINK WE NEED THIS\n                // newVote.id = postVoteRef.id;\n                batch.set(postVoteRef, newVote);\n                updatedPost.voteStatus = voteStatus + vote;\n                updatedPostVotes = [\n                    ...updatedPostVotes,\n                    newVote\n                ];\n            } else {\n                // Used for both possible cases of batch writes\n                const postVoteRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.firestore, \"users\", \"\".concat(user.uid, \"/postVotes/\").concat(existingVote.id));\n                // Removing vote\n                if (existingVote.voteValue === vote) {\n                    voteChange *= -1;\n                    updatedPost.voteStatus = voteStatus - vote;\n                    updatedPostVotes = updatedPostVotes.filter((vote)=>vote.id !== existingVote.id);\n                    batch.delete(postVoteRef);\n                } else {\n                    voteChange = 2 * vote;\n                    updatedPost.voteStatus = voteStatus + 2 * vote;\n                    const voteIdx = postStateValue.postVotes.findIndex((vote)=>vote.id === existingVote.id);\n                    // console.log(\"HERE IS VOTE INDEX\", voteIdx);\n                    // Vote was found - findIndex returns -1 if not found\n                    if (voteIdx !== -1) {\n                        updatedPostVotes[voteIdx] = {\n                            ...existingVote,\n                            voteValue: vote\n                        };\n                    }\n                    batch.update(postVoteRef, {\n                        voteValue: vote\n                    });\n                }\n            }\n            let updatedState = {\n                ...postStateValue,\n                postVotes: updatedPostVotes\n            };\n            const postIdx = postStateValue.posts.findIndex((item)=>item.id === post.id);\n            // if (postIdx !== undefined) {\n            updatedPosts[postIdx] = updatedPost;\n            updatedState = {\n                ...updatedState,\n                posts: updatedPosts\n            };\n            // }\n            /**\n       * Optimistically update the UI\n       * Used for single page view [pid]\n       * since we don't have real-time listener there\n       */ if (updatedState.selectedPost) {\n                updatedState = {\n                    ...updatedState,\n                    selectedPost: updatedPost\n                };\n            }\n            // Optimistically update the UI\n            setPostStateValue(updatedState);\n            // Update database\n            const postRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.firestore, \"posts\", post.id);\n            batch.update(postRef, {\n                voteStatus: voteStatus + voteChange\n            });\n            await batch.commit();\n        } catch (error) {\n            console.log(\"onVote error\", error);\n        }\n    };\n    const onDeletePost = async (post)=>{\n        console.log(\"DELETING POST: \", post.id);\n        try {\n            // if post has an image url, delete it from storage\n            if (post.imageURL) {\n                const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_2__.ref)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.storage, \"posts/\".concat(post.id, \"/image\"));\n                await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_2__.deleteObject)(imageRef);\n            }\n            // delete post from posts collection\n            const postDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.firestore, \"posts\", post.id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.deleteDoc)(postDocRef);\n            // Update post state\n            setPostStateValue((prev)=>({\n                    ...prev,\n                    posts: prev.posts.filter((item)=>item.id !== post.id)\n                }));\n            /**\n       * Cloud Function will trigger on post delete\n       * to delete all comments with postId === post.id\n       */ return true;\n        } catch (error) {\n            console.log(\"THERE WAS AN ERROR\", error);\n            return false;\n        }\n    };\n    const getCommunityPostVotes = async (communityId)=>{\n        var _user;\n        const postVotesQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_8__.firestore, \"users/\".concat((_user = user) === null || _user === void 0 ? void 0 : _user.uid, \"/postVotes\")), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.where)(\"communityId\", \"==\", communityId));\n        const postVoteDocs = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(postVotesQuery);\n        const postVotes = postVoteDocs.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n        setPostStateValue((prev)=>({\n                ...prev,\n                postVotes: postVotes\n            }));\n    // const unsubscribe = onSnapshot(postVotesQuery, (querySnapshot) => {\n    //   const postVotes = querySnapshot.docs.map((postVote) => ({\n    //     id: postVote.id,\n    //     ...postVote.data(),\n    //   }));\n    // });\n    // return () => unsubscribe();\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _user;\n        if (!((_user = user) === null || _user === void 0 ? void 0 : _user.uid) || !communityStateValue.currentCommunity) return;\n        getCommunityPostVotes(communityStateValue.currentCommunity.id);\n    }, [\n        user,\n        communityStateValue.currentCommunity\n    ]);\n    /**\n   * DO THIS INITIALLY FOR POST VOTES\n   */ // useEffect(() => {\n    //   if (!user?.uid || !communityData) return;\n    //   const postVotesQuery = query(\n    //     collection(firestore, `users/${user?.uid}/postVotes`),\n    //     where(\"communityId\", \"==\", communityData?.id)\n    //   );\n    //   const unsubscribe = onSnapshot(postVotesQuery, (querySnapshot) => {\n    //     const postVotes = querySnapshot.docs.map((postVote) => ({\n    //       id: postVote.id,\n    //       ...postVote.data(),\n    //     }));\n    //     setPostStateValue((prev) => ({\n    //       ...prev,\n    //       postVotes: postVotes as PostVote[],\n    //     }));\n    //   });\n    //   return () => unsubscribe();\n    // }, [user, communityData]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _user;\n        // Logout or no authenticated user\n        if (!((_user = user) === null || _user === void 0 ? void 0 : _user.uid) && !loadingUser) {\n            setPostStateValue((prev)=>({\n                    ...prev,\n                    postVotes: []\n                }));\n            return;\n        }\n    }, [\n        user,\n        loadingUser\n    ]);\n    return {\n        postStateValue,\n        setPostStateValue,\n        onSelectPost,\n        onDeletePost,\n        loading,\n        setLoading,\n        onVote,\n        error\n    };\n};\n_s(usePosts, \"cvq66CudPqQFxbDzCuXKCqz55oI=\", false, function() {\n    return [\n        react_firebase_hooks_auth__WEBPACK_IMPORTED_MODULE_3__.useAuthState,\n        recoil__WEBPACK_IMPORTED_MODULE_4__.useRecoilState,\n        recoil__WEBPACK_IMPORTED_MODULE_4__.useSetRecoilState,\n        next_router__WEBPACK_IMPORTED_MODULE_9__.useRouter,\n        recoil__WEBPACK_IMPORTED_MODULE_4__.useRecoilValue\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (usePosts);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/usePosts.tsx\n"));

/***/ })

});